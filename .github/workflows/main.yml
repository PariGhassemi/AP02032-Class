name: build and test

on:
  push:
  pull_request:
    branches: [ main ]
    paths:
    - '**.cs'
    - '**.csproj'

env:
  DOTNET_VERSION: '8.0.101' # The .NET SDK version to use

jobs:
  build-and-test:

    name: build-and-test-${{matrix.os}}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Find solution files
      id: find-solutions
      run: |
        find . -type f -name '*.sln' -print > solutions.txt
        echo "::set-output name=solutions::$(cat solutions.txt)"

    - name: Install dependencies
      run: |
        IFS=$'\n'
        for solution in $(cat ${{ steps.find-solutions.outputs.solutions }}); do
          echo "Restoring $solution"
          dotnet restore $solution
        done

    - name: Building solutions
      run: |
        IFS=$'\n'
        for solution in $(cat ${{ steps.find-solutions.outputs.solutions }}); do
          echo "Building $solution"
          dotnet build --configuration Release --no-restore $solution
        done


    - name: Testing Solutions
      run: |
        IFS=$'\n'
        for solution in $(cat ${{ steps.find-solutions.outputs.solutions }}); do
          echo "Restoring $solution"
          dotnet test --no-restore --verbosity normal $solution
        done        
